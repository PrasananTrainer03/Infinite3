Object Oriented Programming : 

It is an approach that provides a way of modularizing programming, that which can be used to create small partition memory area for both data and objects, which are to be used as templates for creating copies 
of such modules on demand. 

Object : 
________

	An object is a real world entity, that which possess 3 characterstics known as

	  (i) State

	 (ii) Behaviour

	(iii) Identity 


OOPS features : 
________________


	(i) Encapsualtion : Wrapping up of data and functions into a single unit known as Encapsulation.

	(ii) Abstraction : Hiding the irrelevant details of an object that do not contribute to ts essnetial 
			characterstics known as Abstraction. 

		*** Encapsulation focuses on showing the relevant details, where 
			abstraction focuses on hiding the irrelevant details ***

	(iii) Inheritance : Deriving a new entity from already existing entity known as inheritance, through
		inheritance we can reduce the size of the program. 

	(iv) Polymorphism : The ability to take more than one form known as polymorphism.

class : 

  A class is a template or blueprint, that which contains combination of data members
and member functions. Members of the class can be accessable by using the instance of 
the class. 

class class_name
{
    data members;
    member functions;
}


Why Java : 
___________

(i) Platform Independence : Write Once and run anywhere.

(ii) Console Apps

(iii) Windows Apps

(iv) Web Apps

(v) Service Oriented 

(vi) Packages : Contains group of realted classes and interfaces that which belongs to one 
common group, if you want to overcome the naming conflicts between classes, then we need
the help of packages. 

Java Features : 
________________

(i) Simple : 
	
	Java uses simple C/C++ syntaxes, as a programmer no needs to take care of internal details like memory management etc... as how much memory allocated to run the program, the same amount of memory will be reallocated automatically. 

(ii) Object Oriented 

	Java supports all object oriented programming features, as its truly object oriented
	programming language. 

(iii) Compiled and Interpreted

	Java programs are compiled first, during compilation java code will be converted
	into bytecode, then .class file will be created. In interpretation, it reads the 
	bytecode line by line and executes. 

(iv) Portable : Ability to run the program without changing the source code, java programs are programs
	that can run on any env, without changing the source code. 

(v) Securable : Security is the key thing for any kind of application, by using java we can implement
	various levels of security as 

		(a) Compiler Level : Your programmer authorized compile w.r.t. which version as 
			1.8 or 11 or etc...

		(b) ByteCode Level

			Whethere your program authorized to run in given env.

			** You wrote program in one system, and try to run in another sytsem as both 
			systems have different version, then this security takes place ***

		(c) Class Loader Level : You can create your own classes, as your class authorized to 
			load or not. 

(vi) Distributed 

	By using java, we can implement all distributed and robust applications. 


Java Architecture : 
___________________


	1) Java Program

		Java code, that which stored with extension .java 

	2) Java Class

		Java code after compilation, its converted into bytecode, then 
			.class file will be created. 

	3) JVM (Java Virtual Machine)

		(i) Class Loader

			Used to load all classes which are required to run the program.

			There are 2 types of class loaders known as 

			(a) Primordial Class Loader

				Used to load all system classes which are required
			   to run the program.

			(b) Class Loader Objects 
				Used to load all custom classes which are required
			   to run the program. 

		(ii) JIT Compiler (Just-In Time) 

			used to convert bytecode into CPU specific format. 

		(iii) Execution Manager : 

			Contains QUEUE of programs, which are ready to run, where 
		we can execute the program. 

		*** Before execution, it needs to undergone security authentication ***

	4) Java API : It provides runtime env, that which allows you to run the 
		java program. 

		JDK (Java Development Kit) jdk1.8 version preferred 

		JRE (Java Runtime Env) that which allows you to run the java progm. 

What is the top level class in java 

Object

What is the default package in java

java.lang 

Access Modifiers :
___________________

	  (i) private : Allows you to access members within current class. 

	 (ii) public : Allows you to access members in entire application. 

	(iii) protected : Allows you to access members within current/derived class. 

	 (iv) friendly : By default, java possess friendly access modifier, allows you to access
		members in all classes of current package. 


how to define the method main 

you can define method main() as

public static void main(String[] args) {
....
....
}

main() method cannot be static as no class object supposed to call method main(). 

We have output statement as

System.out.println() : used to display any value or message. 

Data Types : 
_____________

There are 2 types of data types as

	(i) Value Types :

		int,float,double,char,boolean

		Value types will be stored in STACK memory, and reference types will
	be stored in HEAP memory. 

	(ii) Reference types 

		String, Object and custom type.


You can create an object to the class, as 

class_name obj = new class_name();

Control Structures : 
_____________________

	Used to define the flow of the program. 

There are 2 types of control structures known as

	(i) Branching

		Used to execute statements based on the conditoin.

		if...else : 

		if (condition) {
		   statement(s);
		} else {
		   statement(s);
		}

	switch...case : Used to define the menu-driven programs. 

	switch(expr) {
	  case exp1 :
		statement(s);
		break;
	  case expr 2: 
		statement(s);
		break;
	....
	....
	....

	default : 
	   statement(s);
	   break;
	}

	(ii) Looping 

		while loop : This loop executes all the statements repeatedly until the condition remains true,
if the condition remains false, then it comes out of the loop. 

	For every loop, basically there are 3 phases as 

		(i) Initialization

		(ii) Condition

		(iii) Increment/Decrement 

	Initialization performed at the beginning of the loop.

	Condition performed at the conditional part of the loop.

	Increment/Decrement performed before closing the loop. 

	while(condition) {
	  statement(s);
	  ....
          ....
        }


	for loop : 

	This loop executes all the statements repeatedly until the condition remains true,
if the condition remains false, then it comes out of the loop. 

	for(initialization;condition;increment/decrement) {
		statement(s);
	}



Array : 

An array is the finite ordered set of homogeneous elements, means all the elements
belongs to same data type. 

All the elements of array are stored in successive memory locations. 

int[] a=new int[]{4,2,66,32,3};

a[0]=4;
a[1]=2;
a[2]=66;
a[3]=32;
a[4]=3;

int[] a = new int[] {12,5,32,55,2};
//		for(int i=0;i<a.length;i++) {
//			System.out.println(a[i]);
//		}
		for (int i : a) {
			System.out.println(i);
		}

How the above foreach loop (generalized foreach loop ) getting executed ???

At first i points to the first element in array A, after processing first element, 
it checks next element is there or not by using hasMoreElements() method. 

if hasMoreElements() returns true, it moves to the next element, by using nextElement() 

it repeats as soon as hasMoreElements() returns true. 


























































	